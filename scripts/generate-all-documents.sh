#!/bin/bash

# üöÄ Script Principal de G√©n√©ration - Tous les Documents
# G√©n√©ration compl√®te du Dossier-Projet2.pdf et de la pr√©sentation Slide-Oral

set -e

echo "üöÄ G√âN√âRATION COMPL√àTE - TOUS LES DOCUMENTS"
echo "============================================="
echo ""

# Configuration
DOSSIER_SCRIPT="scripts/generate-dossier-projet2-pdf.sh"
SLIDE_SCRIPT="scripts/generate-slide-oral-presentation.sh"
DOSSIER_OUTPUT_DIR="UF-Zoom/docs"
SLIDE_OUTPUT_DIR="UF-Zoom"

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Fonction de log color√©
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# V√©rification des pr√©requis
check_prerequisites() {
    log "V√©rification des pr√©requis..."
    
    # V√©rifier que les scripts existent
    if [ ! -f "$DOSSIER_SCRIPT" ]; then
        error "Script Dossier-Projet2 non trouv√© : $DOSSIER_SCRIPT"
        exit 1
    fi
    
    if [ ! -f "$SLIDE_SCRIPT" ]; then
        error "Script Slide-Oral non trouv√© : $SLIDE_SCRIPT"
        exit 1
    fi
    
    # V√©rifier que les scripts sont ex√©cutables
    if [ ! -x "$DOSSIER_SCRIPT" ]; then
        error "Script Dossier-Projet2 non ex√©cutable"
        chmod +x "$DOSSIER_SCRIPT"
        success "Permissions corrig√©es pour Dossier-Projet2"
    fi
    
    if [ ! -x "$SLIDE_SCRIPT" ]; then
        error "Script Slide-Oral non ex√©cutable"
        chmod +x "$SLIDE_SCRIPT"
        success "Permissions corrig√©es pour Slide-Oral"
    fi
    
    success "Tous les scripts sont pr√™ts"
}

# G√©n√©ration du Dossier-Projet2.pdf
generate_dossier() {
    log "G√©n√©ration du Dossier-Projet2.pdf..."
    
    echo "üìã G√âN√âRATION DOSSIER-PROJET2.PDF"
    echo "=================================="
    
    # G√©n√©rer PDF uniquement
    echo "1" | "$DOSSIER_SCRIPT"
    
    if [ $? -eq 0 ]; then
        success "Dossier-Projet2.pdf g√©n√©r√© avec succ√®s"
    else
        error "Erreur lors de la g√©n√©ration du Dossier-Projet2.pdf"
        return 1
    fi
}

# G√©n√©ration de la pr√©sentation Slide-Oral
generate_slides() {
    log "G√©n√©ration de la pr√©sentation Slide-Oral..."
    
    echo ""
    echo "üéØ G√âN√âRATION PR√âSENTATION SLIDE-ORAL"
    echo "======================================"
    
    # G√©n√©rer tous les formats
    echo "4" | "$SLIDE_SCRIPT"
    
    if [ $? -eq 0 ]; then
        success "Pr√©sentation Slide-Oral g√©n√©r√©e avec succ√®s"
    else
        error "Erreur lors de la g√©n√©ration de la pr√©sentation Slide-Oral"
        return 1
    fi
}

# V√©rification des fichiers g√©n√©r√©s
verify_outputs() {
    log "V√©rification des fichiers g√©n√©r√©s..."
    
    local all_success=true
    
    # V√©rifier Dossier-Projet2.pdf
    if [ -f "$DOSSIER_OUTPUT_DIR/Dossier-Projet2.pdf" ] && [ -s "$DOSSIER_OUTPUT_DIR/Dossier-Projet2.pdf" ]; then
        FILE_SIZE=$(du -h "$DOSSIER_OUTPUT_DIR/Dossier-Projet2.pdf" | cut -f1)
        success "Dossier-Projet2.pdf : $FILE_SIZE"
    else
        error "Dossier-Projet2.pdf manquant ou invalide"
        all_success=false
    fi
    
    # V√©rifier Slide-Oral.pdf
    if [ -f "$SLIDE_OUTPUT_DIR/Slide-Oral.pdf" ] && [ -s "$SLIDE_OUTPUT_DIR/Slide-Oral.pdf" ]; then
        FILE_SIZE=$(du -h "$SLIDE_OUTPUT_DIR/Slide-Oral.pdf" | cut -f1)
        success "Slide-Oral.pdf : $FILE_SIZE"
    else
        error "Slide-Oral.pdf manquant ou invalide"
        all_success=false
    fi
    
    # V√©rifier Slide-Oral.html
    if [ -f "$SLIDE_OUTPUT_DIR/Slide-Oral.html" ] && [ -s "$SLIDE_OUTPUT_DIR/Slide-Oral.html" ]; then
        FILE_SIZE=$(du -h "$SLIDE_OUTPUT_DIR/Slide-Oral.html" | cut -f1)
        success "Slide-Oral.html : $FILE_SIZE"
    else
        error "Slide-Oral.html manquant ou invalide"
        all_success=false
    fi
    
    # V√©rifier Slide-Oral.pptx
    if [ -f "$SLIDE_OUTPUT_DIR/Slide-Oral.pptx" ] && [ -s "$SLIDE_OUTPUT_DIR/Slide-Oral.pptx" ]; then
        FILE_SIZE=$(du -h "$SLIDE_OUTPUT_DIR/Slide-Oral.pptx" | cut -f1)
        success "Slide-Oral.pptx : $FILE_SIZE"
    else
        error "Slide-Oral.pptx manquant ou invalide"
        all_success=false
    fi
    
    if [ "$all_success" = true ]; then
        success "Tous les documents ont √©t√© g√©n√©r√©s avec succ√®s !"
    else
        error "Certains documents n'ont pas pu √™tre g√©n√©r√©s"
        return 1
    fi
}

# Affichage du r√©sum√©
show_summary() {
    echo ""
    echo "üìä R√âSUM√â DE LA G√âN√âRATION"
    echo "============================"
    echo ""
    
    echo "‚úÖ DOCUMENTS G√âN√âR√âS :"
    echo "   üìã Dossier-Projet2.pdf : $(du -h "$DOSSIER_OUTPUT_DIR/Dossier-Projet2.pdf" 2>/dev/null | cut -f1 || echo "N/A")"
    echo "   üéØ Slide-Oral.pdf : $(du -h "$SLIDE_OUTPUT_DIR/Slide-Oral.pdf" 2>/dev/null | cut -f1 || echo "N/A")"
    echo "   üåê Slide-Oral.html : $(du -h "$SLIDE_OUTPUT_DIR/Slide-Oral.html" 2>/dev/null | cut -f1 || echo "N/A")"
    echo "   üìä Slide-Oral.pptx : $(du -h "$SLIDE_OUTPUT_DIR/Slide-Oral.pptx" 2>/dev/null | cut -f1 || echo "N/A")"
    echo ""
    
    echo "üéØ COMP√âTENCES C1-C5 :"
    echo "   ‚úÖ C1 - ACV Simplifi√©e : COMPL√âT√âE"
    echo "   ‚úÖ C2 - Cadrage & Budget : COMPL√âT√âE"
    echo "   ‚úÖ C3 - R√©f√©rentiel : COMPL√âT√âE"
    echo "   ‚úÖ C4 - Impl√©mentations Avanc√©es : COMPL√âT√âE"
    echo "   ‚úÖ C5 - Mesure & Analyse : COMPL√âT√âE"
    echo ""
    
    echo "üöÄ PROCHAINES √âTAPES :"
    echo "   1. Validation de la PR C5"
    echo "   2. Merge vers develop"
    echo "   3. Tests de d√©ploiement sur Render"
    echo "   4. Pr√©paration C6 avec Scaphandre"
    echo ""
    
    echo "üìÅ FICHIERS DISPONIBLES :"
    echo "   - $DOSSIER_OUTPUT_DIR/Dossier-Projet2.pdf"
    echo "   - $SLIDE_OUTPUT_DIR/Slide-Oral.pdf"
    echo "   - $SLIDE_OUTPUT_DIR/Slide-Oral.html"
    echo "   - $SLIDE_OUTPUT_DIR/Slide-Oral.pptx"
}

# Menu principal
show_menu() {
    echo ""
    echo "üéØ OPTIONS DE G√âN√âRATION :"
    echo "1. G√©n√©rer Dossier-Projet2.pdf uniquement"
    echo "2. G√©n√©rer pr√©sentation Slide-Oral uniquement"
    echo "3. G√©n√©rer tous les documents"
    echo "4. V√©rifier les fichiers existants"
    echo "5. Quitter"
    echo ""
    read -p "Choisissez une option (1-5) : " choice
    
    case $choice in
        1)
            generate_dossier
            ;;
        2)
            generate_slides
            ;;
        3)
            generate_dossier
            generate_slides
            verify_outputs
            show_summary
            ;;
        4)
            verify_outputs
            show_summary
            ;;
        5)
            log "Au revoir !"
            exit 0
            ;;
        *)
            error "Option invalide"
            show_menu
            ;;
    esac
}

# Fonction principale
main() {
    echo "üöÄ D√©marrage de la g√©n√©ration compl√®te des documents..."
    echo ""
    
    # V√©rifications
    check_prerequisites
    
    # Menu interactif
    show_menu
}

# Gestion des signaux
trap 'echo ""; log "G√©n√©ration interrompue"; exit 1' INT TERM

# Ex√©cution
main "$@" 