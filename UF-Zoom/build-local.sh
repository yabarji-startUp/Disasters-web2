#!/bin/bash

# Script de build local pour le d√©veloppement
# G√©n√®re les documents sans passer par GitHub Actions
# Auteur : Yassen ABARJI
# Date : 04/09/2025

set -e

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}üöÄ Build Local - G√©n√©ration des Documents${NC}"
echo "=========================================="
echo ""

# V√©rifier que nous sommes dans le bon r√©pertoire
if [[ ! -f "$PROJECT_ROOT/package.json" ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Ce script doit √™tre ex√©cut√© depuis le r√©pertoire UF-Zoom${NC}"
    exit 1
fi

echo -e "${BLUE}üìÅ R√©pertoire de travail :${NC} $PROJECT_ROOT"
echo -e "${BLUE}üìÅ Scripts :${NC} $SCRIPT_DIR"
echo ""

# V√©rifier les pr√©requis
echo -e "${BLUE}üîç V√©rification des pr√©requis...${NC}"

# V√©rifier Node.js
if ! command -v node &> /dev/null; then
    echo -e "${YELLOW}‚ùå Node.js n'est pas install√©${NC}"
    exit 1
fi

# V√©rifier npm
if ! command -v npm &> /dev/null; then
    echo -e "${YELLOW}‚ùå npm n'est pas install√©${NC}"
    exit 1
fi

# V√©rifier Marp
if ! command -v marp &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Marp n'est pas install√©. Installation...${NC}"
    npm install -g @marp-team/marp-cli
fi

echo -e "${GREEN}‚úÖ Tous les pr√©requis sont satisfaits${NC}"
echo ""

# Installation des d√©pendances si n√©cessaire
if [[ ! -d "$PROJECT_ROOT/node_modules" ]]; then
    echo -e "${BLUE}üì¶ Installation des d√©pendances...${NC}"
    cd "$PROJECT_ROOT"
    npm install
    echo -e "${GREEN}‚úÖ D√©pendances install√©es${NC}"
    echo ""
fi

# Build du projet
echo -e "${BLUE}üî® Build du projet...${NC}"
cd "$PROJECT_ROOT"
npm run build
echo -e "${GREEN}‚úÖ Build du projet termin√©${NC}"
echo ""

# G√©n√©ration des documents
echo -e "${BLUE}üìÑ G√©n√©ration des documents...${NC}"

# G√©n√©rer le PDF
echo -e "${BLUE}  üìÑ G√©n√©ration du PDF Dossier-Projet2.md...${NC}"
if bash "$SCRIPT_DIR/generate-dossier-pdf.sh"; then
    echo -e "${GREEN}  ‚úÖ PDF g√©n√©r√© avec succ√®s${NC}"
else
    echo -e "${YELLOW}  ‚ö†Ô∏è  √âchec de la g√©n√©ration du PDF${NC}"
fi

# G√©n√©rer les slides
echo -e "${BLUE}  üìÑ G√©n√©ration des slides Slide-Oral.md...${NC}"
if bash "$SCRIPT_DIR/generate-slide.sh"; then
    echo -e "${GREEN}  ‚úÖ Slides g√©n√©r√©s avec succ√®s${NC}"
else
    echo -e "${YELLOW}  ‚ö†Ô∏è  √âchec de la g√©n√©ration des slides${NC}"
fi

echo ""

# V√©rification des r√©sultats
echo -e "${BLUE}üîç V√©rification des documents g√©n√©r√©s...${NC}"

# V√©rifier le PDF
if [[ -f "$SCRIPT_DIR/docs/output/Dossier-Projet2.pdf" ]]; then
    PDF_SIZE=$(du -h "$SCRIPT_DIR/docs/output/Dossier-Projet2.pdf" | cut -f1)
    echo -e "${GREEN}‚úÖ PDF Dossier-Projet2.pdf cr√©√© (Taille: $PDF_SIZE)${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  PDF Dossier-Projet2.pdf non trouv√©${NC}"
fi

# V√©rifier les slides
if [[ -f "$SCRIPT_DIR/output/Slide-Oral.pdf" ]]; then
    echo -e "${GREEN}‚úÖ Slide PDF cr√©√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Slide PDF non trouv√©${NC}"
fi

if [[ -f "$SCRIPT_DIR/output/Slide-Oral.html" ]]; then
    echo -e "${GREEN}‚úÖ Slide HTML cr√©√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Slide HTML non trouv√©${NC}"
fi

echo ""

# R√©sum√©
echo -e "${BLUE}üìã R√©sum√© du build local :${NC}"
echo "  üèóÔ∏è  Projet : Build termin√©"
echo "  üìÑ Documents : G√©n√©ration termin√©e"
echo "  üìÅ Sortie : $SCRIPT_DIR/docs/output/ et $SCRIPT_DIR/output/"
echo ""

echo -e "${GREEN}üéâ Build local termin√© avec succ√®s !${NC}"
echo ""
echo -e "${BLUE}üí° Prochaines √©tapes :${NC}"
echo "  - V√©rifiez les documents g√©n√©r√©s"
echo "  - Committez les changements si n√©cessaire"
echo "  - Poussez vers GitHub pour d√©clencher le workflow CI/CD" 