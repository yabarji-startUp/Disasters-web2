name: Build et G√©n√©ration des Documents

on:
  # D√©sactiv√© temporairement pour √©viter les conflits
  # push:
  #   branches: [ main, develop, feature/* ]
  #   paths:
  #     - 'UF-Zoom/docs/**'
  #     - 'UF-Zoom/Slide-Oral.md'
  #     - 'Themes/**'
  #     - 'package.json'
  # pull_request:
  #   branches: [ main, develop ]
  #   paths:
  #     - 'UF-Zoom/docs/**'
  #     - 'UF-Zoom/Slide-Oral.md'
  #     - 'Themes/**'
  #     - 'package.json'
  workflow_dispatch: # Permet le d√©clenchement manuel uniquement

jobs:
  build-and-docs:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Installation des d√©pendances
      run: |
        npm ci
        npm install -g @marp-team/marp-cli
        
    - name: V√©rification des pr√©requis
      run: |
        echo "V√©rification des th√®mes CSS..."
        ls -la Themes/
        echo "V√©rification des fichiers sources..."
        ls -la UF-Zoom/docs/
        ls -la UF-Zoom/
        
    - name: Build du projet
      run: |
        echo "üöÄ Build du projet..."
        npm run build
        
    - name: G√©n√©ration des documents
      run: |
        echo "üìÑ G√©n√©ration des documents..."
        bash UF-Zoom/build-docs.sh
        
    - name: V√©rification des documents g√©n√©r√©s
      run: |
        echo "‚úÖ V√©rification des documents g√©n√©r√©s..."
        echo "--- PDF Dossier ---"
        ls -la UF-Zoom/docs/output/
        echo "--- Slides ---"
        ls -la UF-Zoom/output/
        echo "--- Rapport de build ---"
        ls -la build-docs-report.txt
        
    - name: Upload des documents g√©n√©r√©s
      uses: actions/upload-artifact@v4
      with:
        name: documents-generes
        path: |
          UF-Zoom/docs/output/
          UF-Zoom/output/
          build-docs-report.txt
        retention-days: 30
        
    - name: Comment PR avec les r√©sultats
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## üìÑ Documents g√©n√©r√©s automatiquement\n\n';
          comment += '‚úÖ **Build r√©ussi** avec g√©n√©ration automatique des documents\n\n';
          
          try {
            if (fs.existsSync('build-docs-report.txt')) {
              const report = fs.readFileSync('build-docs-report.txt', 'utf8');
              comment += '### üìã Rapport de build\n';
              comment += '```\n' + report + '\n```\n\n';
            }
          } catch (error) {
            comment += '‚ö†Ô∏è Impossible de lire le rapport de build\n\n';
          }
          
          comment += '### üìÅ Fichiers disponibles\n';
          comment += '- **PDF Dossier** : `UF-Zoom/docs/output/Dossier-Projet2.pdf`\n';
          comment += '- **Slides PDF** : `UF-Zoom/output/Slide-Oral.pdf`\n';
          comment += '- **Slides HTML** : `UF-Zoom/output/Slide-Oral.html`\n';
          comment += '- **Slides PPTX** : `UF-Zoom/output/Slide-Oral.pptx`\n\n';
          
          comment += 'üí° Ces documents sont g√©n√©r√©s automatiquement √† chaque build.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Notification de succ√®s
      if: success()
      run: |
        echo "üéâ Build et g√©n√©ration des documents termin√©s avec succ√®s !"
        echo "üìÑ Documents disponibles dans les artifacts GitHub Actions"
        
    - name: Notification d'√©chec
      if: failure()
      run: |
        echo "‚ùå √âchec du build ou de la g√©n√©ration des documents"
        echo "üìã V√©rifiez les logs pour plus de d√©tails" 